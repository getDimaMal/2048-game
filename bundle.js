(()=>{"use strict";var e={280:(e,t,n)=>{n.d(t,{A:()=>a});var r=n(354),o=n.n(r),i=n(314),s=n.n(i)()(o());s.push([e.id,".grid{display:grid;grid-template-columns:repeat(4, 100px);grid-template-rows:repeat(4, 100px);gap:10px;position:relative}","",{version:3,sources:["webpack://./src/components/Grid/grid.scss"],names:[],mappings:"AAAA,MACE,YAAA,CACA,sCAAA,CACA,mCAAA,CACA,QAAA,CAEA,iBAAA",sourcesContent:[".grid {\n  display: grid;\n  grid-template-columns: repeat(4, 100px);\n  grid-template-rows: repeat(4, 100px);\n  gap: 10px;\n\n  position: relative;\n}"],sourceRoot:""}]);const a=s},316:(e,t,n)=>{n.d(t,{A:()=>a});var r=n(354),o=n.n(r),i=n(314),s=n.n(i)()(o());s.push([e.id,".tile{width:100px;height:100px;background-color:gray;border-radius:5px;font-size:3rem;color:#fff;display:flex;align-items:center;justify-content:center}.tile.empty{background-color:#f8f8ff}","",{version:3,sources:["webpack://./src/components/Tile/tile.scss"],names:[],mappings:"AAAA,MACE,WAAA,CACA,YAAA,CAEA,qBAAA,CACA,iBAAA,CAEA,cAAA,CACA,UAAA,CAEA,YAAA,CACA,kBAAA,CACA,sBAAA,CAEA,YACE,wBAAA",sourcesContent:[".tile {\n  width: 100px;\n  height: 100px;\n\n  background-color: grey;\n  border-radius: 5px;\n\n  font-size: 3rem;\n  color: #FFF;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &.empty {\n    background-color: ghostwhite;\n  }\n}"],sourceRoot:""}]);const a=s},664:(e,t,n)=>{n.d(t,{A:()=>a});var r=n(354),o=n.n(r),i=n(314),s=n.n(i)()(o());s.push([e.id,'*{margin:0;padding:0}html,body,#root{width:100vw;height:100vh;box-sizing:border-box;font-size:16px;font-family:"Roboto Light",sans-serif;display:flex;align-items:center;justify-content:center}',"",{version:3,sources:["webpack://./src/styles/main.scss"],names:[],mappings:"AAAA,EACE,QAAA,CACA,SAAA,CAGF,gBACE,WAAA,CACA,YAAA,CACA,qBAAA,CAEA,cAAA,CACA,qCAAA,CAEA,YAAA,CACA,kBAAA,CACA,sBAAA",sourcesContent:['* {\n  margin: 0;\n  padding: 0;\n}\n\nhtml, body, #root {\n  width: 100vw;\n  height: 100vh;\n  box-sizing: border-box;\n\n  font-size: 16px;\n  font-family: "Roboto Light", sans-serif;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n'],sourceRoot:""}]);const a=s},314:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var s={};if(r)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(s[c]=!0)}for(var d=0;d<e.length;d++){var u=[].concat(e[d]);r&&s[u[0]]||(void 0!==i&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=i),n&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=n):u[2]=n),o&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=o):u[4]="".concat(o)),t.push(u))}},t}},354:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},72:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var i={},s=[],a=0;a<e.length;a++){var c=e[a],d=r.base?c[0]+r.base:c[0],u=i[d]||0,p="".concat(d," ").concat(u);i[d]=u+1;var l=n(p),A={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==l)t[l].references++,t[l].updater(A);else{var f=o(A,r);r.byIndex=a,t.splice(a,0,{identifier:p,updater:f,references:1})}s.push(p)}return s}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var s=0;s<i.length;s++){var a=n(i[s]);t[a].references--}for(var c=r(e,o),d=0;d<i.length;d++){var u=n(i[d]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}i=c}}},659:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},540:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},56:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},113:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={id:r,exports:{}};return e[r](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(72),t=n.n(e),r=n(825),o=n.n(r),i=n(659),s=n.n(i),a=n(56),c=n.n(a),d=n(540),u=n.n(d),p=n(113),l=n.n(p),A=n(664),f={};f.styleTagTransform=l(),f.setAttributes=c(),f.insert=s().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=u(),t()(A.A,f),A.A&&A.A.locals&&A.A.locals;var h=function(e,t,n){if(n||2===arguments.length)for(var r,o=0,i=t.length;o<i;o++)!r&&o in t||(r||(r=Array.prototype.slice.call(t,0,o)),r[o]=t[o]);return e.concat(r||Array.prototype.slice.call(t))},m=function(){function e(){var e=this;this.startGame=function(){e.grid=Array(4).fill(null).map((function(){return Array(4).fill(0)})),e.addRandomTile(),e.addRandomTile()},this.getGrid=function(){return e.grid},this.moveUp=function(){var t=e.getTransposedArr(e.grid).map(e.compressArr);e.grid=e.getTransposedArr(t),e.addRandomTile()},this.moveDown=function(){var t=e.getTransposedArr(e.grid).map((function(t){return e.compressArr(t.reverse()).reverse()}));e.grid=e.getTransposedArr(t),e.addRandomTile()},this.moveLeft=function(){e.grid=e.grid.map(e.compressArr),e.addRandomTile()},this.moveRight=function(){e.grid=e.grid.map((function(t){return e.compressArr(t.reverse()).reverse()})),e.addRandomTile()},this.startGame()}return e.prototype.getEmptyTiles=function(){var e=[];return this.grid.forEach((function(t,n){t.forEach((function(t,r){t||e.push([n,r])}))})),e},e.prototype.addRandomTile=function(){var e=this.getEmptyTiles();if(e.length){var t=e[Math.floor(Math.random()*e.length)],n=t[0],r=t[1];this.grid[n][r]=Math.random()<.9?2:4}},e.prototype.compressArr=function(e){for(var t=e.filter((function(e){return e})),n=0;n<t.length-1;n++)t[n]===t[n+1]&&(t[n]+=t[n+1],t[n+1]=0);t=t.filter((function(e){return e}));var r=Array(e.length-t.length).fill(0);return h(h([],t,!0),r,!0)},e.prototype.getTransposedArr=function(e){return e[0].map((function(t,n){return e.map((function(e){return e[n]}))}))},e}(),g=function(){function e(e,t){this.game=e,this.view=t,this.setKeydownListener(),this.renderTiles()}return e.prototype.setKeydownListener=function(){var e=this,t={ArrowUp:this.game.moveUp,ArrowDown:this.game.moveDown,ArrowLeft:this.game.moveLeft,ArrowRight:this.game.moveRight};document.addEventListener("keydown",(function(n){var r=n.key;r in t&&t[r](),e.renderTiles()}))},e.prototype.renderTiles=function(){this.view.renderTiles(this.game.getGrid())},e.prototype.render=function(){return this.view.render()},e}(),v=n(280),y={};y.styleTagTransform=l(),y.setAttributes=c(),y.insert=s().bind(null,"head"),y.domAPI=o(),y.insertStyleElement=u(),t()(v.A,y),v.A&&v.A.locals&&v.A.locals;const C=function(){function e(){this.grid=document.createElement("div"),this.grid.classList.add("grid")}return e.prototype.render=function(){return this.grid},e}();var b=n(316),w={};w.styleTagTransform=l(),w.setAttributes=c(),w.insert=s().bind(null,"head"),w.domAPI=o(),w.insertStyleElement=u(),t()(b.A,w),b.A&&b.A.locals&&b.A.locals;const x=function(){function e(e){this.props=e,this.tile=document.createElement("div"),this.setValue(),this.setClasses()}return e.prototype.setValue=function(){this.tile.innerText=String(this.props.value||"")},e.prototype.setClasses=function(){this.tile.classList.add("tile"),0===this.props.value&&this.tile.classList.add("empty")},e.prototype.render=function(){return this.tile},e}();var T=function(){function e(){this.grid=(new C).render()}return e.prototype.setTilesList=function(e){this.tilesList=[];for(var t=0,n=e;t<n.length;t++)for(var r=0,o=n[t];r<o.length;r++){var i=o[r];this.tilesList.push(new x({value:i}))}},e.prototype.renderTiles=function(e){var t=this;this.setTilesList(e),this.grid.innerHTML="",this.tilesList.forEach((function(e){return t.grid.append(e.render())}))},e.prototype.render=function(){return this.grid},e}();document.addEventListener("DOMContentLoaded",(function(){var e=document.getElementById("root"),t=new g(new m,new T);e.append(t.render())}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,